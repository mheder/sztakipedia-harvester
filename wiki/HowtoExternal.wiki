#summary How to write and deploy your custom processor

== Introduction ==

Sztakipedia harvester has two main components.
 * a standalone IRC reader that listens on wikipedia channels and downloads the modified articles from the Wikipedia API and posts it (HTTP POST) to a configured server+port. 
 * An UIMA Consumer + Aggregate Analysis Engine. The Consumer listens on a HTTP port, waiting for the articles and the the Analysis Engine Processes the articles. However, with the Analysis Engine you have two options
   * Use Sztakipedia's AAE, that builds a Lucene index
   * Use the so-called "External Processor" Chain, in which the articles are pre-processed (links, sentences, categories, etc are recognized)and you provide your own java class that deals with the result - sends it somewhere or stores it your own way. 

This Page describes how to get your own External Processor solution running

= Steps =
== Download Stuff ==
 * '''pedia_uima_harvester_rel-X.tar.gz'''
 * '''uima-as-2.3.1-bin.tar.gz'''

== Writing your External Processor == 
 * check out the example project from svn
 * add lib to the 
== Configure your External Processor ==
 * Edit '''descriptors/CPE/HTTPCR_parser_wst_category_externalConsumer_CPE.xml''' which is the UIMA descriptor for the Engine we will be using. 
 * Locate this element 
{{{
 <casProcessor deployment="integrated" name="ExternalConsumerAE">
}}}
 This is about your custom External processor. You should change '''externalProcessorClassname''' and '''externalProcessorParams'''
 * additionally, if you look around in this XML you will find the configuration for the consumer queue size, max. request size and the port where the consumer's built-in jetty listens
== Start the UIMA part ==
 * Create a directory where uima and the harvester software will be deployed. In this tutorial this will be '''/tmp/uimahome'''
 * extract the contents of ''pedia_uima_harvester_rel-X.tar.gz'' and ''uima-as-2.3.1-bin.tar.gz'' so you will have ''apache-uima-as-2.3.1'' and ''pedia_uima_harvester'' directories under uimahome 
 * put your jar your jar with your external processor to the ''pedia_uima_harvester'' directory
 * export UIMA_HOME variable 
{{{
username@hostname:/tmp/uimahome$export UIMA_HOME=/tmp/uimahome
}}} 
 * Start 
This is what you should see on the console
{{{
2012-06-29 11:13:08.134:INFO:oejs.Server:jetty-7.6.4.v20120524
2012-06-29 11:13:08.165:INFO:oejsh.ContextHandler:started o.e.j.s.h.ContextHandler{/,file:/tmp/uimahome/pedia_uima_harvester/}
2012-06-29 11:13:08.215:INFO:oejs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:8080
}}}
The UIMA part is now waiting for the articles

== Configure the irc reader ==
== Start the IRC reader ==
== Monitor what is going on ==

{{{
21608 [Thread-57] INFO  BackgroundWorkerThread  - ACCEPTED: Kirk Wong(ID:13955960)
Article Vagbhatananda Gurudevar(Rev:499883711), accepted. Queue util:1 items, 999 remaining.
22035 [Thread-58] INFO  BackgroundWorkerThread  - ACCEPTED: Vagbhatananda Gurudevar(ID:13227099)
22374 [class org.jibble.pircbot.InputThread-Thread] INFO  hu.sztaki.pedia.uima.reader.util.SztakipediaBot  - Articles received:56, sent:40, filtered:15 Articles in progress:1 Curr. running threads:0
22693 [Thread-59] INFO  BackgroundWorkerThread  - FILTERED: Sri Lanka civil war(null)
}}}